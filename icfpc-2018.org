* Execution
  *Maintaining field energy*
  if (S.harmonics == High)
    S.energy := S.energy + 30 * R * R * R
  else // (S.harmonics == Low)
    S.energy := S.energy + 3 * R * R * R
  endif
  
  *Nanobots energy*
  S.energy := S.energy + 20 * n

  *Commands execution*
  ---

  *Removing performed commands*
  ---
  
* Commands
  *Halt*
  ...

  *Wait*
  ...

  *Flip*
  ...

  *SMove lld*
  Let c′ = c + lld
  bot.pos := c′
  S.energy := S.energy + 2 * mlen(lld)
    
  *LMove sld1 sld2*
  Let c′ = c + sld1 and c″ = c′ + sld2
  bot.pos := c″
  S.energy := S.energy + 2 * (mlen(sld1) + 2 + mlen(sld2))

  *Fission nd m*
  ...
  S.energy := S.energy + 24
  
  *Fill nd*
  if (S.matrix(c′) == Void)
    S.matrix(c′) := Full
    S.energy := S.energy + 12
  else // (S.matrix(c′) == Full)
    S.energy := S.energy + 6
  endif
  
  *FusionP nd (Fusion Primary), FusionS nd (Fusion Secondary)*
  ...
  S.energy := S.energy - 24
  
